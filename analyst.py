from logger import get_chat_history
from db import run_hr_query
from yandex_cloud_ml_sdk import YCloudML
from visualizer import visualize_with_matplotlib
from telegram import send_table_as_file
import os
import datetime
import re

FOLDER_ID = os.getenv("YC_FOLDER_ID")
API_KEY = os.getenv("YC_API_KEY")

yc_sdk = YCloudML(folder_id=FOLDER_ID, auth=API_KEY)
llm = yc_sdk.models.completions("yandexgpt")

# --- –ü–æ–ª–Ω–∞—è —Å—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã hr_data ---
SCHEMA = {
    # –≤—Ä–µ–º–µ–Ω–Ω—ã–µ/–¥–∞—Ç—ã
    "report_date": "DATE ‚Äî –¥–∞—Ç–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞. –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–Ω–¥–æ–≤, —Ç–∞–∫ –∫–∞–∫ –¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–∞—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ–ª—å–∫–æ –∑–∞ 3 –º–µ—Å—è—Ü–∞). –≠—Ç–æ –¥–∞—Ç–∞ –≤—ã–≥—Ä—É–∑–∫–∏, –∞ –Ω–µ —Å–æ–±—ã—Ç–∏—è.",
    "fire_from_company": "DATE ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –ó–Ω–∞—á–µ–Ω–∏–µ 1970-01-01 –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –≤—Å—ë –µ—â—ë —Ä–∞–±–æ—Ç–∞–µ—Ç. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–∞—Ç–∞ –±–æ–ª—å—à–µ 1971 –≥–æ–¥–∞",
    "hire_to_company": "DATE ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –∫–æ–º–ø–∞–Ω–∏—é. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞–π–º–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–∏.",
    "real_day": "INT ‚Äî —á–∏—Å–ª–æ –¥–Ω–µ–π –≤ –æ—Ç—á—ë—Ç–Ω–æ–º –º–µ—Å—è—Ü–µ",

    # —á–∏—Å–ª–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
    "hirecount": "INT ‚Äî (0/1) ‚Äî —Ñ–ª–∞–≥ (1, –µ—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –±—ã–ª –ø—Ä–∏–Ω—è—Ç –≤ –∫–æ–º–ø–∞–Ω–∏—é –≤ —Ç–µ–∫—É—â–µ–º `report_date`). –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–¥—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º `report_date`.",
    "firecount": "INT ‚Äî (0/1) ‚Äî —Ñ–ª–∞–≥ (1, –µ—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –±—ã–ª —É–≤–æ–ª–µ–Ω –≤ —Ä–∞–º–∫–∞—Ö `report_date`). –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤.",
    "fte": "NUMERIC ‚Äî —Å—Ç–∞–≤–∫–∞ (0.2, 0.5, 1.0 –∏ —Ç.–¥.)",
    "experience": "NUMERIC ‚Äî —Å—Ç–∞–∂ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∏—Å—á—Å–ª—è–µ–º—ã–π –≤ –º–µ—Å—è—Ü–∞—Ö",
    "fullyears": "INT ‚Äî –í–æ–∑—Ä–∞—Å—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –ø–æ–ª–Ω—ã—Ö –≥–æ–¥–∞—Ö.",

    # –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏
    "service": "TEXT ‚Äî –°–µ—Ä–≤–∏—Å –∏–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.",
    "cluster": "TEXT ‚Äî –∫–ª–∞—Å—Ç–µ—Ä",
    "location_name": "TEXT ‚Äî –ª–æ–∫–∞—Ü–∏—è",
    "sex": "TEXT ‚Äî –ø–æ–ª —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∑–Ω–∞—á–µ–Ω–∏—è M (–º—É–∂—á–∏–Ω–∞) –∏ F (–∂–µ–Ω—â–∏–Ω–∞)",
    "age_category": "TEXT ‚Äî –ö–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É",
    "experience_category": "TEXT ‚Äî –ö–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ —Å—Ç–∞–∂—É",
    "department_3": "TEXT ‚Äî –ù–∞–∑–≤–∞–Ω–∏–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ —Ç—Ä–µ—Ç—å–µ–≥–æ —É—Ä–æ–≤–Ω—è.",
    "department_4": "TEXT ‚Äî –ù–∞–∑–≤–∞–Ω–∏–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ —á–µ—Ç–≤—ë—Ä—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è.",
    "department_5": "TEXT ‚Äî –ù–∞–∑–≤–∞–Ω–∏–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ –ø—è—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è.",
    "department_6": "TEXT ‚Äî –ù–∞–∑–≤–∞–Ω–∏–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ —à–µ—Å—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è.",
}

CATEGORICAL = [
    "service", "cluster", "location_name", "sex",
    "age_category", "experience_category",
    "department_3", "department_4", "department_5", "department_6",
]
NUMERIC = ["hirecount", "firecount", "fte", "experience", "fullyears"]
TEMPORAL = ["report_date", "fire_from_company", "hire_to_company", "real_day"]


def _schema_text() -> str:
    return "\n".join([f"- {k}: {v}" for k, v in SCHEMA.items()])


def validate_sql(sql: str) -> bool:
    sql_up = sql.strip().upper()
    if not sql_up.startswith("SELECT"):
        return False
    forbidden = ["DROP", "DELETE", "UPDATE", "INSERT", "ALTER"]
    return not any(word in sql_up for word in forbidden)


def extract_sql(text: str) -> str | None:
    """
    –î–æ—Å—Ç–∞—ë–º SQL-–∑–∞–ø—Ä–æ—Å –∏–∑ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å).
    """
    # 1. –ò—â–µ–º –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–æ–≤ ```sql ... ```
    match = re.search(r"```(?:sql)?\s*(SELECT .*?)```", text, flags=re.I | re.S)
    if match:
        return match.group(1).strip()

    # 2. –ï—Å–ª–∏ –±–ª–æ–∫–æ–≤ –Ω–µ—Ç ‚Äî –∏—â–µ–º –ø—Ä–æ—Å—Ç–æ SELECT
    match = re.search(r"(SELECT .*?);?$", text, flags=re.I | re.S)
    if match:
        return match.group(1).strip()

    return None


def make_filename(user_message: str) -> str:
    date_str = datetime.date.today().isoformat()
    name = "analytics"

    if "—É–≤–æ–ª—å–Ω" in user_message.lower():
        name = "fires"
    elif "–Ω–∞–π–º" in user_message.lower():
        name = "hires"
    elif "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫" in user_message.lower():
        name = "stats"
    elif "–≥—Ä–∞—Ñ–∏–∫" in user_message.lower():
        name = "chart"

    return f"{name}_{date_str}.csv"


def run_analyst(thread_id: str, user_message: str, chat_id: str) -> dict:
    try:
        # --- –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ ---
        history = get_chat_history(thread_id, limit=5)
        hist_text = "\n".join(
            [f"{row['role']}({row['agent_name']}): {row['message']}" for row in history]
        )

        # --- –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç ---
        system_prompt = f"""
–¢—ã ‚Äî SQL-–∞–Ω–∞–ª–∏—Ç–∏–∫, —Ä–∞–±–æ—Ç–∞—é—â–∏–π —Å —Ç–∞–±–ª–∏—Ü–µ–π hr_data.

üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:
{_schema_text()}

üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏:
{', '.join(CATEGORICAL)}

üî¢ –ß–∏—Å–ª–æ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏:
{', '.join(NUMERIC)}

üïí –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏:
{', '.join(TEMPORAL)}

---

–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ:

1. –ï—Å–ª–∏ –Ω—É–∂–Ω—ã —Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã –Ω–∞–π–º–∞ –∏–ª–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π:
   - hire_to_company ‚Äî –¥–∞—Ç–∞ –Ω–∞–π–º–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
   - fire_from_company ‚Äî –¥–∞—Ç–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
   –≠—Ç–æ —Ç–æ—á–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è.

2. hirecount –∏ firecount ‚Äî –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø–æ report_date (–≤–æ–∑–º–æ–∂–Ω–æ —Å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º). –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Ç–æ—á–Ω—ã—Ö —Ä–∞—Å—á—ë—Ç–æ–≤.

3. –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–Ω–∞–º–∏–∫–∏ –Ω–∞–π–º–æ–≤ (–ø–æ –º–µ—Å—è—Ü–∞–º/–≥–æ–¥–∞–º) –∏—Å–ø–æ–ª—å–∑—É–π:
   DATE_TRUNC('month', hire_to_company) –∏–ª–∏ fire_from_company, –∞ –Ω–µ `report_date` –∏–ª–∏ `hirecount`.

4. report_date ‚Äî —ç—Ç–æ –æ—Ç—á—ë—Ç–Ω—ã–π –º–µ—Å—è—Ü (–∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–µ—Ç–∫–∞, –Ω–µ —Ñ–∞–∫—Ç —Å–æ–±—ã—Ç–∏—è).

5. fte ‚Äî —Å—Ç–∞–≤–∫–∞: 1.0 = –ø–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å, 0.5 = –ø–æ–ª–æ–≤–∏–Ω–∞ –∏ —Ç.–¥.

6. fullyears ‚Äî –≤–æ–∑—Ä–∞—Å—Ç (–≤ –ø–æ–ª–Ω—ã—Ö –≥–æ–¥–∞—Ö), experience ‚Äî —Å—Ç–∞–∂ (–≤ –≥–æ–¥–∞—Ö).

7. age_category –∏ experience_category ‚Äî –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏.

8. department_3...6 ‚Äî –∏–µ—Ä–∞—Ä—Ö–∏—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π.

9. –í—Å–µ–≥–¥–∞ —Ñ–∏–ª—å—Ç—Ä—É–π –∏ –≥—Ä—É–ø–ø–∏—Ä—É–π –ø–æ –¥–∞—Ç–µ, –µ—Å–ª–∏ —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è "–ø–æ –º–µ—Å—è—Ü–∞–º", "–ø–æ –≥–æ–¥–∞–º", "–∑–∞ –ø–µ—Ä–∏–æ–¥".


---

üéØ –ü—Ä–∞–≤–∏–ª–∞:

1. –ü–∏—à–∏ **—Ç–æ–ª—å–∫–æ SQL SELECT** –Ω–∞ PostgreSQL –∫ —Ç–∞–±–ª–∏—Ü–µ `hr_data`. –ü—Ä–∏—Å–≤–∞–∏–≤–∞–π –ø—Ä–∏–∑–Ω–∞–∫–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∏–º–µ–Ω–∞ –≤ —Å—Ç–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–ø—Ä–æ—Å–æ–º. 
2. –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ—Ç–∞–ª–µ–π (–≥–æ–¥, –ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç, —Å–µ—Ä–≤–∏—Å) ‚Äî —Å–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–π **—É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å** –Ω–∞ —Ä—É—Å—Å–∫–æ–º.
3. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –¥–∞–Ω–Ω—ã–µ, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –¥—Ä—É–≥–∏–µ —Ç–∞–±–ª–∏—Ü—ã.
4. –û—Ç–≤–µ—á–∞–π **—Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏–º –∏–∑ –¥–≤—É—Ö** –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:
   - –£—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å (—Ç–µ–∫—Å—Ç).
   - –ß–∏—Å—Ç—ã–π SQL SELECT (–±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π).
5. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–∞ –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏—è –≤ SQL. –≠—Ç–æ –ó–ê–ü–†–ï–©–ï–ù–û!
    –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ ‚Äî —Ñ–∏–ª—å—Ç—Ä—É–π –∏–ª–∏ –≥—Ä—É–ø–ø–∏—Ä—É–π –ø–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∑–Ω–∞—á–µ–Ω–∏—è–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    (–Ω–∞–ø—Ä–∏–º–µ—Ä, department_3, service, cluster –∏ —Ç.–¥.).

    –ï—Å–ª–∏ –Ω–µ—è—Å–Ω–æ, –∫–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–º–µ–µ—Ç—Å—è –≤ –≤–∏–¥—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ø—è—Ç—ã–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç", "–≥–æ—Ä–æ–¥", "–º—É–∂—á–∏–Ω—ã —Å—Ç–∞—Ä—à–µ 30") ‚Äî
    —Å–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –∑–Ω–∞—á–µ–Ω–∏—è!
"""


        model = llm.configure(temperature=0.0, max_tokens=500)
        result = model.run(f"{system_prompt}\n\n–ò—Å—Ç–æ—Ä–∏—è:\n{hist_text}\n\n–í–æ–ø—Ä–æ—Å: {user_message}")

        answer = result.alternatives[0].text.strip()
        print("–û—Ç–≤–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∞:", answer)

        sql = extract_sql(answer)

        # --- –£—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å ---
        if not sql:
            return {"type": "clarification", "text": f"‚ùì {answer}", "image": None}

        # --- –í–∞–ª–∏–¥–∞—Ü–∏—è SQL ---
        if not validate_sql(sql):
            return {"type": "error", "text": f"‚ö†Ô∏è –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω –∫–∞–∫ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π:\n{sql}", "image": None}

        # --- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL ---
        try:
            rows = run_hr_query(sql)
        except Exception as db_err:
            return {
                "type": "error",
                "text": f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL:\n{sql}\n\n–û—à–∏–±–∫–∞: {db_err}",
                "image": None,
            }

        if not rows:
            return {"type": "result", "text": "‚ö†Ô∏è –î–∞–Ω–Ω—ã—Ö –Ω–µ—Ç.", "image": None}

        # --- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–∞–±–ª–∏—Ü–µ–π (CSV) ---
        filename = make_filename(user_message)
        send_table_as_file(chat_id, rows, filename=filename)

        # --- –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è ---
        img = None
        try:
            img = visualize_with_matplotlib(
                rows,
                user_query=user_message,
                schema={"categorical": CATEGORICAL, "numeric": NUMERIC, "temporal": TEMPORAL},
            )
            print("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è:", "–µ—Å—Ç—å" if img else "–ù–ï–¢")
        except Exception as e:
            print("Matplotlib visualization failed:", e)

        return {"type": "result", "text": f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ: {filename}", "image": img}

    except Exception as e:
        return {"type": "error", "text": f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞: {e}", "image": None}
